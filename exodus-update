#V3.1
#!/bin/bash


# Setting Variables and functions
Install () {
	
	echo "Download has been successful, Please input password to install wallet"
		echo ""
		sudo dpkg -i exodus_*
		echo "Exodus has now succesfully installed"
		sleep 1
		cd .. 
		rm -rf ExodusTemp
		echo ""
		echo "To run type 'exodus' without quotes and press enter"		 
		exit
}

Date=$(date +"%-y.%-m.%-d")
Date1=$(date +"%-y.%-m.%-d" -d "1 days ago")
Date2=$(date +"%-y.%-m.%-d" -d "2 days ago")
Date3=$(date +"%-y.%-m.%-d" -d "3 days ago")
Date4=$(date +"%-y.%-m.%-d" -d "4 days ago")
Date5=$(date +"%-y.%-m.%-d" -d "5 days ago")
Date6=$(date +"%-y.%-m.%-d" -d "6 days ago")
Date7=$(date +"%-y.%-m.%-d" -d "7 days ago")
Date8=$(date +"%-y.%-m.%-d" -d "8 days ago")
Date9=$(date +"%-y.%-m.%-d" -d "9 days ago")
Date10=$(date +"%-y.%-m.%-d" -d "10 days ago") 
Date11=$(date +"%-y.%-m.%-d" -d "11 days ago")
Date12=$(date +"%-y.%-m.%-d" -d "12 days ago")
Date13=$(date +"%-y.%-m.%-d" -d "13 days ago")
Address1=$'https://exodusbin.azureedge.net/releases/exodus_'
Address2=$'_amd64.deb'


# Github updater
if [ -e ~/.config/Exodus-Wallet-Updater/ ] ;then 
	echo "Checking github for updates on the script"
else
	echo "Repo is not configured in Default location ( ~/.config/Exodus-Wallet-Updater) - Cloning repo now from github.com/datlinuxguy"
	sleep 2
	cd ~/.config
	git clone https://github.com/DatLinuxGuy/Exodus-Wallet-Updater.git > /dev/null 2>&1
	sleep 1
	echo "Clone complete"
	cd Exodus-Wallet-Updater
	chmod +x exodus-update
	sudo mv exodus-update /usr/local/bin/exodus-update
	git ls-remote origin -h refs/heads/master | sed 's/\(.\{40\}\).*/\1/' > .script.hash
	chmod -w .script.hash
	echo "Hash for latest version"
	cat .script.hash
	echo "Install complete. Please run 'exodus-update' without quotes"
	sleep 2
	exit 
fi

cd ~/.config/Exodus-Wallet-Updater/
OldV=$(cat .script.hash)
NewV=$(git ls-remote origin -h refs/heads/master | sed 's/\(.\{40\}\).*/\1/')
CVersion=$(head -n1 /usr/local/bin/exodus-update | sed 's|[+#]||g')
if [ "$OldV" = "$NewV" ] ;then 
	echo -e "Script Version is ""\e[92m${CVersion}\e[0m"" and up to date"
else
	echo -e "Current script Version is ""\e[92m${CVersion}\e[0m"
	git diff | head -n7 | sed 's|[-+#]||g' > NVersion 
	nVersion=$(tail -n1 NVersion)
	echo -e "Version ""\e[92m${nVersion}\e[0m"" is available Pulling now..."
	sleep 2
	git pull > /dev/null 2>&1 
	sudo mv exodus-update /usr/local/bin
	chmod +w .script.hash
	git ls-remote origin -h refs/heads/master | sed 's/\(.\{40\}\).*/\1/' > .script.hash
	chmod -w .script.hash
	echo "Hash installed"
	cat .script.hash
	echo "Update complete. Please run 'exodus-update' again without quotes"
	exit
fi

#Create folders and remove old ones
cd ~/Downloads
sleep 1
mkdir ExodusTemp
cd ExodusTemp

#Checking updates for script - Back up/Update from local server 
#V=$(head -n1 /usr/local/bin/exodus-update | sed 's/\(.\{2\}\)*/\1/')
#curl -s https://datlinuxguy.com/index.php/s/BMiZFYdxDs4Yi6q/download | head -n1 > VersionCheck 
#newV=$(sed 's/\(.\{2\}\)*/\1/' VersionCheck)
#
#if [ "$V" = "$newV" ] ;then 
#echo "Script is up-to-date"
#cd ..
#rm -rf ExodusTemp
#else
#echo -e "New Version ""\e[92m${newV}\e[0m"" has been found. Downloading and configuring now"
#sleep 2
#wget --https-only https://datlinuxguy.com/index.php/s/BMiZFYdxDs4Yi6q/download -O exodus-update > /dev/null 2>&1
#sleep 1
#chmod +x exodus-update 
#sudo mv exodus-update /usr/local/bin/exodus-update
#echo "Update complete, Please run 'exodus-update' again without quotes"
#rm VersionCheck
#exit
#fi


#check if exodus is installed
if [ -e /usr/bin/exodus ]
	then Version=$(exodus --version)
echo -e "Your current wallet version is ""\e[92m${Version}"" \e[0m- looking for the latest version"
	else echo ""
		 echo -e "Exodus is NOT installed (or not in the /usr/bin/ dir) The script will now download the latest version"
fi


# Installing

if [[ `wget -S --spider ${Address1}${Date}${Address2} 2>&1 | grep 'HTTP/1.1 200 OK'` ]]
then
	if [ "$Date" = "$Version" ]
		then echo "Your wallet is the latest version"
	exit
   	else echo -e "Exodus version ""\e[92m${Date}"" \e[0mis available to download. Downloading now, Please wait"
   		wget ${Address1}${Date}${Address2} > /dev/null 2>&1
   		Install
   	fi
fi

if [[ `wget -S --spider ${Address1}${Date1}${Address2} 2>&1 | grep 'HTTP/1.1 200 OK'` ]]
then
	if [ "$Date1" = "$Version" ]
		then echo "Your wallet is the latest version"
	exit
   	else echo -e "Exodus version ""\e[92m${Date1}"" \e[0mis available to download. Downloading now, Please wait"
   		wget ${Address1}${Date1}${Address2} > /dev/null 2>&1
   		Install
   	fi
fi

if [[ `wget -S --spider ${Address1}${Date2}${Address2} 2>&1 | grep 'HTTP/1.1 200 OK'` ]]
then
	if [ "$Date2" = "$Version" ]
		then echo "Your wallet is the latest version"
	exit
   	else echo -e "Exodus version ""\e[92m${Date2}"" \e[0mis available to download. Downloading now, Please wait"
   		wget ${Address1}${Date2}${Address2} > /dev/null 2>&1
		Install
   	fi
fi

if [[ `wget -S --spider ${Address1}${Date3}${Address2} 2>&1 | grep 'HTTP/1.1 200 OK'` ]]
then
	if [ "$Date3" = "$Version" ]
		then echo "Your wallet is the latest version"
	exit
   	else echo -e "Exodus version ""\e[92m${Date3}"" \e[0mis available to download. Downloading now, Please wait"
   		wget ${Address1}${Date3}${Address2} > /dev/null 2>&1
		Install
   	fi
fi

if [[ `wget -S --spider ${Address1}${Date4}${Address2} 2>&1 | grep 'HTTP/1.1 200 OK'` ]]
then
	if [ "$Date4" = "$Version" ]
		then echo "Your wallet is the latest version"
	exit
   	else echo -e "Exodus version ""\e[92m${Date4}"" \e[0mis available to download. Downloading now, Please wait"
   		wget ${Address1}${Date4}${Address2} > /dev/null 2>&1
		Install
   	fi
fi

if [[ `wget -S --spider ${Address1}${Date5}${Address2} 2>&1 | grep 'HTTP/1.1 200 OK'` ]]
then
	if [ "$Date5" = "$Version" ]
		then echo "Your wallet is the latest version"
	exit
   	else echo -e "Exodus version ""\e[92m${Date5}"" \e[0mis available to download. Downloading now, Please wait"
   		wget ${Address1}${Date5}${Address2} > /dev/null 2>&1
		Install
   	fi
fi

if [[ `wget -S --spider ${Address1}${Date6}${Address2} 2>&1 | grep 'HTTP/1.1 200 OK'` ]]
then
	if [ "$Date6" = "$Version" ]
		then echo "Your wallet is the latest version"
	exit
   	else echo -e "Exodus version ""\e[92m${Date6}"" \e[0mis available to download. Downloading now, Please wait"
   		wget ${Address1}${Date6}${Address2} > /dev/null 2>&1
		Install
   	fi
fi

if [[ `wget -S --spider ${Address1}${Date7}${Address2} 2>&1 | grep 'HTTP/1.1 200 OK'` ]]
then
	if [ "$Date7" = "$Version" ]
		then echo "Your wallet is the latest version"
	exit
   	else echo -e "Exodus version ""\e[92m${Date7}"" \e[0mis available to download. Downloading now, Please wait"
   		wget ${Address1}${Date7}${Address2} > /dev/null 2>&1
		Install	
	fi
fi

if [[ `wget -S --spider ${Address1}${Date8}${Address2} 2>&1 | grep 'HTTP/1.1 200 OK'` ]]
then
	if [ "$Date8" = "$Version" ]
		then echo "Your wallet is the latest version"
	exit
   	else echo -e "Exodus version ""\e[92m${Date8}"" \e[0mis available to download. Downloading now, Please wait"
   		wget ${Address1}${Date8}${Address2} > /dev/null 2>&1
		Install
   	fi
fi

if [[ `wget -S --spider ${Address1}${Date9}${Address2} 2>&1 | grep 'HTTP/1.1 200 OK'` ]]
then
	if [ "$Date9" = "$Version" ]
		then echo "Your wallet is the latest version"
	exit
   	else echo -e "Exodus version ""\e[92m${Date9}"" \e[0mis available to download. Downloading now, Please wait"
   		wget ${Address1}${Date9}${Address2} > /dev/null 2>&1
		Install
   	fi
fi

if [[ `wget -S --spider ${Address1}${Date10}${Address2} 2>&1 | grep 'HTTP/1.1 200 OK'` ]]
then
	if [ "$Date10" = "$Version" ]
		then echo "Your wallet is the latest version"
	exit
   	else echo -e "Exodus version ""\e[92m${Date10}"" \e[0mis available to download. Downloading now, Please wait"
   		wget ${Address1}${Date10}${Address2} > /dev/null 2>&1
		Install
   	fi
fi

if [[ `wget -S --spider ${Address1}${Date11}${Address2} 2>&1 | grep 'HTTP/1.1 200 OK'` ]]
then
	if [ "$Date11" = "$Version" ]
		then echo "Your wallet is the latest version"
	exit
   	else echo -e "Exodus version ""\e[92m${Date11}"" \e[0mis available to download. Downloading now, Please wait"
   		wget ${Address1}${Date11}${Address2} > /dev/null 2>&1
		Install
   	fi
fi

if [[ `wget -S --spider ${Address1}${Date12}${Address2} 2>&1 | grep 'HTTP/1.1 200 OK'` ]]
then
	if [ "$Date12" = "$Version" ]
		then echo "Your wallet is the latest version"
	exit
   	else echo -e "Exodus version ""\e[92m${Date12}"" \e[0mis available to download. Downloading now, Please wait"
   		wget ${Address1}${Date12}${Address2} > /dev/null 2>&1
		Install
   	fi
	
fi
