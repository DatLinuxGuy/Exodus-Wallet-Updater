#!/bin/bash
#V4.82

# Built for Ubuntu 18.04
# Ideas are welcome

# Set place for log files
dates=$(date '+%H:%M-%d.%m.%y')
if [ -e ~/.config/Exodus-Wallet-Updater/logs ] ;then 
set -x
exec 2>~/.config/Exodus-Wallet-Updater/logs/exodus.log-$dates
else 
   set -x
   exec 2>/tmp/exodus.log-$dates
fi

# Delete logs files older than 30 days
find ~/.config/Exodus-Wallet-Updater/logs/* -type f -mtime +30 -delete

# Create new Temp folders
cd ~/Downloads  
mkdir -p ExodusTemp 
cd ExodusTemp

# Network test. Edit IP if googles DNS is blocked for you
ping -c2 8.8.8.8 > Networktest 
if  grep -- 'Network is Unreachable\|Network is unreachable'  Networktest
   then echo -e "\e[41;1;37m*** Cannot ping Googles DNS - Please check your connection ***\e[0m"
   echo "--------------------Please see ip info below-----------------------"
   echo ""
   ip addr show 
   exit
else echo -e "\e[92;3mNetwork test succesfull\e[0m" 
   sleep 2
fi

if which git > /dev/null ;then
echo -e "\e[92;3mGit Detected\e[0m"
else 
echo "git is NOT installed"
echo "Installing now"
sudo apt install git -y > /dev/null 2>&1
sleep 1
echo -e "\e[92;3Installed\e[0m"
fi

# Setting Variables and functions
Install () {
   if ls ~/Downloads/ExodusTemp/exodus* ;then
      echo "Please input your admin password to install wallet"
      echo ""
      sudo dpkg -i exodus-* 
      sleep 1
      V=$(/usr/bin/exodus --version)
      cd ~/Downloads
      rm -rf ExodusTemp
      echo ""
      echo -e "\e[92mVesion $V has been installed\e[0m"
      echo -e "\e[92mRunning Now....\e[0m"
      exodus &
      exit
   else echo "Couldn't find the .deb file in ~/Downloads/ExodusTemp - Exiting"
      exit
   fi
}

HashCheck () {    
   echo "Checking sha256sum on files to make sure they match"
   if [ "$Hashlocal" = "$Hashremote" ] ;then
         echo -e "\e[92mHash Matches\e[0m"
         sleep 1
         else echo -e "\033[5;41;1;37m   *** HASH DOESN'T MATCH ***   \033[0m"
            echo "Please double and triple check the .deb file in ~/Downloads/ExodusTemp BEFORE manually installing"
            echo "Delete the file and then head to https://www.exodus.com/download if you're unsure"
            exit
      fi
}

killexodus () {
   echo "Checking if Exodus is running"
   if pgrep Exodus ;then
      echo "^^^^ Closed Exodus procsesses before updating " 
      sleep 2
      pkill Exodus
   else echo "Exodus not running - Updating now"
   fi
}

Date=$(date +"%-y.%-m.%-d")
Date1=$(date +"%-y.%-m.%-d" -d "1 days ago")
Date2=$(date +"%-y.%-m.%-d" -d "2 days ago")
Date3=$(date +"%-y.%-m.%-d" -d "3 days ago")
Date4=$(date +"%-y.%-m.%-d" -d "4 days ago")
Date5=$(date +"%-y.%-m.%-d" -d "5 days ago")
Date6=$(date +"%-y.%-m.%-d" -d "6 days ago")
Date7=$(date +"%-y.%-m.%-d" -d "7 days ago")
Date8=$(date +"%-y.%-m.%-d" -d "8 days ago")
Date9=$(date +"%-y.%-m.%-d" -d "9 days ago")
Date10=$(date +"%-y.%-m.%-d" -d "10 days ago") 
Date11=$(date +"%-y.%-m.%-d" -d "11 days ago")
Date12=$(date +"%-y.%-m.%-d" -d "12 days ago")
Date13=$(date +"%-y.%-m.%-d" -d "13 days ago")
Address1=$'https://downloads.exodus.com/releases/exodus-linux-x64-'
Address2=$'.deb'

# Sometimes .config is not created on fresh install of ubuntu (test on ubuntu server) 
mkdir -p ~/.config
# Checking Github for updates to the script
if [ -e ~/.config/Exodus-Wallet-Updater/ ] ;then 
   echo "Checking github for updates to the script"
else
   echo "Repo was not found in ~/.config/Exodus-Wallet-Updater - Cloning now from'github.com/datlinuxguy'"
   cd ~/.config
   git clone https://github.com/DatLinuxGuy/Exodus-Wallet-Updater.git 
   sleep 1
   mkdir logs > /dev/null 2>&1
   echo -e "\e[92mComplete\e[0m"
   cd Exodus-Wallet-Updater
   chmod +x exodus-update
   sudo mv exodus-update /usr/local/bin/exodus-update
   show=$(head -n2 /usr/local/bin/exodus-update | sed 's|[#!/bin/bash ]||g')
   show=$(echo $show)
   git ls-remote origin -h refs/heads/master | sed 's/\(.\{40\}\).*/\1/' > .script.hash
   chmod -w .script.hash
   echo -e "Version ""\e[92m${show}\e[0m"" has been installed"
   echo "Please run 'exodus-update' without quotes to install wallet"
   exit 
fi

cd ~/.config/Exodus-Wallet-Updater/
mkdir logs > /dev/null 2>&1
OldV=$(cat .script.hash)
NewV=$(git ls-remote origin -h refs/heads/master | sed 's/\(.\{40\}\).*/\1/')
CVersion=$(head -n2 /usr/local/bin/exodus-update | sed 's|[#!/bin/bash ]||g')
CVersion=$(echo $CVersion)
if [ "$OldV" = "$NewV" ] ;then 
   echo -e "Script Version is ""\e[92m${CVersion}\e[0m"" and up to date"
else
   echo -e "Current script Version is ""\e[92m${CVersion}\e[0m"
   rm NVersion  
   git diff | head -n7 | sed 's|[-+#]||g' > NVersion 
   sleep 1
   nVersion=$(tail -n1 NVersion)
   echo -e "A new version is available, Pulling now..."
   sleep 1
   git pull  
   chmod +x exodus-update
   sudo mv exodus-update /usr/local/bin
   chmod +w .script.hash
   git ls-remote origin -h refs/heads/master | sed 's/\(.\{40\}\).*/\1/' > .script.hash
   chmod -w .script.hash
   echo -e "\e[92mHash From Git Version\e[0m"
   cat .script.hash
   echo " Script update complete. Please run 'exodus-update' again without quotes"
   exit
fi

# Check if exodus is installed
if [ -e /usr/bin/exodus ]
   then Version=$(exodus --version)
echo -e "Your current wallet version is ""\e[92m${Version}"" \e[0m- looking for the latest version"
   else echo ""
       echo -e "Exodus is NOT installed (or not in the /usr/bin/ dir) The script will now download the latest version"
fi

cd ~/Downloads/ExodusTemp

# Grab and install wallet
if [[ `wget -S --spider ${Address1}${Date}${Address2} 2>&1  | grep 'HTTP/1.1 200 OK'` ]] ;then
   if [ "$Date" != "$Version" ] ;then 
      echo -e "Exodus version ""\e[92m${Date}"" \e[0mis available to download. Downloading now, Please wait"
         wget ${Address1}${Date}${Address2} 2>&1 -q --show-progress
         Hashremote=$(curl -s https://downloads.exodus.com/releases/hashes-exodus-${Date}.txt | grep ".deb" | sed 's/\(.\{64\}\).*/\1/')
         Hashlocal=$(sha256sum exodus-* | sed 's/\(.\{64\}\).*/\1/')
         HashCheck #Call function
         killexodus #Call function
         Install #Call function
      fi
      echo "Your wallet is the latest version"
      exit
fi 

if [[ `wget -S --spider ${Address1}${Date1}${Address2} 2>&1  | grep 'HTTP/1.1 200 OK'` ]] ;then
   if [ "$Date1" != "$Version" ] ;then 
      echo -e "Exodus version ""\e[92m${Date1}"" \e[0mis available to download. Downloading now, Please wait"
         wget ${Address1}${Date1}${Address2} 2>&1 -q --show-progress 
         Hashremote=$(curl -s https://downloads.exodus.com/releases/hashes-exodus-${Date1}.txt | grep ".deb" | sed 's/\(.\{64\}\).*/\1/')
         Hashlocal=$(sha256sum exodus-* | sed 's/\(.\{64\}\).*/\1/')
         HashCheck #Call function
         killexodus #Call function
         Install #Call function
      fi
      echo "Your wallet is the latest version"
      exit
fi 

if [[ `wget -S --spider ${Address1}${Date2}${Address2} 2>&1  | grep 'HTTP/1.1 200 OK'` ]] ;then
   if [ "$Date2" != "$Version" ] ;then 
      echo -e "Exodus version ""\e[92m${Date2}"" \e[0mis available to download. Downloading now, Please wait"
         wget ${Address1}${Date2}${Address2} 2>&1 -q --show-progress
         Hashremote=$(curl -s https://downloads.exodus.com/releases/hashes-exodus-${Date2}.txt | grep ".deb" | sed 's/\(.\{64\}\).*/\1/')
         Hashlocal=$(sha256sum exodus-* | sed 's/\(.\{64\}\).*/\1/')
         HashCheck #Call function
         killexodus #Call function
         Install #Call function
      fi
      echo "Your wallet is the latest version"
      exit
fi 

if [[ `wget -S --spider ${Address1}${Date3}${Address2} 2>&1  | grep 'HTTP/1.1 200 OK'` ]] ;then
   if [ "$Date3" != "$Version" ] ;then 
      echo -e "Exodus version ""\e[92m${Date3}"" \e[0mis available to download. Downloading now, Please wait"
         wget ${Address1}${Date3}${Address2} 2>&1 -q --show-progress
         Hashremote=$(curl -s https://downloads.exodus.com/releases/hashes-exodus-${Date3}.txt | grep ".deb" | sed 's/\(.\{64\}\).*/\1/')
         Hashlocal=$(sha256sum exodus-* | sed 's/\(.\{64\}\).*/\1/')
         HashCheck #Call function
         killexodus #Call function
         Install #Call function
      fi
      echo "Your wallet is the latest version"
      exit
fi 
if [[ `wget -S --spider ${Address1}${Date4}${Address2} 2>&1  | grep 'HTTP/1.1 200 OK'` ]] ;then
   if [ "$Date4" != "$Version" ] ;then 
      echo -e "Exodus version ""\e[92m${Date4}"" \e[0mis available to download. Downloading now, Please wait"
         wget ${Address1}${Date4}${Address2} 2>&1 -q --show-progress
         Hashremote=$(curl -s https://downloads.exodus.com/releases/hashes-exodus-${Date4}.txt | grep ".deb" | sed 's/\(.\{64\}\).*/\1/')
         Hashlocal=$(sha256sum exodus-* | sed 's/\(.\{64\}\).*/\1/')
         HashCheck #Call function
         killexodus #Call function
         Install #Call function
      fi
      echo "Your wallet is the latest version"
      exit
fi 

if [[ `wget -S --spider ${Address1}${Date5}${Address2} 2>&1  | grep 'HTTP/1.1 200 OK'` ]] ;then
   if [ "$Date5" != "$Version" ] ;then 
      echo -e "Exodus version ""\e[92m${Date5}"" \e[0mis available to download. Downloading now, Please wait"
         wget ${Address1}${Date5}${Address2} 2>&1 -q --show-progress
         Hashremote=$(curl -s https://downloads.exodus.com/releases/hashes-exodus-${Date5}.txt | grep ".deb" | sed 's/\(.\{64\}\).*/\1/')
         Hashlocal=$(sha256sum exodus-* | sed 's/\(.\{64\}\).*/\1/')
         HashCheck #Call function
         killexodus #Call function
         Install #Call function
      fi
      echo "Your wallet is the latest version"
      exit
fi 

if [[ `wget -S --spider ${Address1}${Date6}${Address2} 2>&1  | grep 'HTTP/1.1 200 OK'` ]] ;then
   if [ "$Date6" != "$Version" ] ;then 
      echo -e "Exodus version ""\e[92m${Date6}"" \e[0mis available to download. Downloading now, Please wait"
         wget ${Address1}${Date6}${Address2} 2>&1 -q --show-progress 
         Hashremote=$(curl -s https://downloads.exodus.com/releases/hashes-exodus-${Date6}.txt | grep ".deb" | sed 's/\(.\{64\}\).*/\1/')
         Hashlocal=$(sha256sum exodus-* | sed 's/\(.\{64\}\).*/\1/')
         HashCheck #Call function
         killexodus #Call function
         Install #Call function
      fi
      echo "Your wallet is the latest version"
      exit
fi 

if [[ `wget -S --spider ${Address1}${Date7}${Address2} 2>&1  | grep 'HTTP/1.1 200 OK'` ]] ;then
   if [ "$Date7" != "$Version" ] ;then 
      echo -e "Exodus version ""\e[92m${Date7}"" \e[0mis available to download. Downloading now, Please wait"
         wget ${Address1}${Date7}${Address2} 2>&1 -q --show-progress
         Hashremote=$(curl -s https://downloads.exodus.com/releases/hashes-exodus-${Date7}.txt | grep ".deb" | sed 's/\(.\{64\}\).*/\1/')
         Hashlocal=$(sha256sum exodus-* | sed 's/\(.\{64\}\).*/\1/')
         HashCheck #Call function
         killexodus #Call function
         Install #Call function
      fi
      echo "Your wallet is the latest version"
      exit
fi 

if [[ `wget -S --spider ${Address1}${Date8}${Address2} 2>&1  | grep 'HTTP/1.1 200 OK'` ]] ;then
   if [ "$Date8" != "$Version" ] ;then 
      echo -e "Exodus version ""\e[92m${Date8}"" \e[0mis available to download. Downloading now, Please wait"
         wget ${Address1}${Date8}${Address2} 2>&1 -q --show-progress
         Hashremote=$(curl -s https://downloads.exodus.com/releases/hashes-exodus-${Date8}.txt | grep ".deb" | sed 's/\(.\{64\}\).*/\1/')
         Hashlocal=$(sha256sum exodus-* | sed 's/\(.\{64\}\).*/\1/')
         HashCheck #Call function
         killexodus #Call function
         Install #Call function
      fi
      echo "Your wallet is the latest version"
      exit
fi  

if [[ `wget -S --spider ${Address1}${Date9}${Address2} 2>&1  | grep 'HTTP/1.1 200 OK'` ]] ;then
   if [ "$Date9" != "$Version" ] ;then 
      echo -e "Exodus version ""\e[92m${Date9}"" \e[0mis available to download. Downloading now, Please wait"
         wget ${Address1}${Date9}${Address2} 2>&1 -q --show-progress
         Hashremote=$(curl -s https://downloads.exodus.com/releases/hashes-exodus-${Date9}.txt | grep ".deb" | sed 's/\(.\{64\}\).*/\1/')
         Hashlocal=$(sha256sum exodus-* | sed 's/\(.\{64\}\).*/\1/')
         HashCheck #Call function
         killexodus #Call function
         Install #Call function
      fi
      echo "Your wallet is the latest version"
      exit
fi 

if [[ `wget -S --spider ${Address1}${Date10}${Address2} 2>&1  | grep 'HTTP/1.1 200 OK'` ]] ;then
   if [ "$Date10" != "$Version" ] ;then 
      echo -e "Exodus version ""\e[92m${Date10}"" \e[0mis available to download. Downloading now, Please wait"
         wget ${Address1}${Date10}${Address2} 2>&1 -q --show-progress
         Hashremote=$(curl -s https://downloads.exodus.com/releases/hashes-exodus-${Date10}.txt | grep ".deb" | sed 's/\(.\{64\}\).*/\1/')
         Hashlocal=$(sha256sum exodus-* | sed 's/\(.\{64\}\).*/\1/')
         HashCheck #Call function
         killexodus #Call function
         Install #Call function
      fi
      echo "Your wallet is the latest version"
      exit
fi 

if [[ `wget -S --spider ${Address1}${Date11}${Address2} 2>&1  | grep 'HTTP/1.1 200 OK'` ]] ;then
   if [ "$Date11" != "$Version" ] ;then 
      echo -e "Exodus version ""\e[92m${Date11}"" \e[0mis available to download. Downloading now, Please wait"
         wget ${Address1}${Date11}${Address2} 2>&1 -q --show-progress
         Hashremote=$(curl -s https://downloads.exodus.com/releases/hashes-exodus-${Date11}.txt | grep ".deb" | sed 's/\(.\{64\}\).*/\1/')
         Hashlocal=$(sha256sum exodus-* | sed 's/\(.\{64\}\).*/\1/')
         HashCheck #Call function
         killexodus #Call function
         Install #Call function
      fi
      echo "Your wallet is the latest version"
      exit
fi 

if [[ `wget -S --spider ${Address1}${Date12}${Address2} 2>&1  | grep 'HTTP/1.1 200 OK'` ]] ;then
   if [ "$Date12" != "$Version" ] ;then 
      echo -e "Exodus version ""\e[92m${Date12}"" \e[0mis available to download. Downloading now, Please wait"
         wget ${Address1}${Date12}${Address2} 2>&1 -q --show-progress
         Hashremote=$(curl -s https://downloads.exodus.com/releases/hashes-exodus-${Date12}.txt | grep ".deb" | sed 's/\(.\{64\}\).*/\1/')
         Hashlocal=$(sha256sum exodus-* | sed 's/\(.\{64\}\).*/\1/')
         HashCheck #Call function
         killexodus #Call function
         Install #Call function
      fi
      echo "Your wallet is the latest version"
      exit
fi 

if [[ `wget -S --spider ${Address1}${Date13}${Address2} 2>&1  | grep 'HTTP/1.1 200 OK'` ]] ;then
   if [ "$Date13" != "$Version" ] ;then 
      echo -e "Exodus version ""\e[92m${Date13}"" \e[0mis available to download. Downloading now, Please wait"
         wget ${Address1}${Date12}${Address2} 2>&1 -q --show-progress
         Hashremote=$(curl -s https://downloads.exodus.com/releases/hashes-exodus-${Date13}.txt | grep ".deb" | sed 's/\(.\{64\}\).*/\1/')
         Hashlocal=$(sha256sum exodus-* | sed 's/\(.\{64\}\).*/\1/')
         HashCheck #Call function
         killexodus #Call function
         Install #Call function
      fi
      echo "Your wallet is the latest version"
      exit
fi
